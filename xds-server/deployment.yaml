apiVersion: v1
kind: Service
metadata:
  name: xds-server
spec:
  selector:
    app: xds-server
  ports:
    - protocol: TCP
      port: 18000
      targetPort: 18000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xds-server
  labels:
    app: xds-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: xds-server
  template:
    metadata:
      labels:
        app: xds-server
    spec:
      serviceAccountName: xds-server-user
      containers:
        - name: xds-server
          image: xds-server
          resources:
            limits:
              cpu: "200m"
              memory: "250Mi"
            requests:
              cpu: "100m"
              memory: "100Mi"
          volumeMounts:
            - mountPath: /var/run/config/app.yaml
              subPath: app.yaml
              name: config
      volumes:
        - name: config
          configMap:
            name: xds-config
---
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: xds-server-user
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: xds-server-reader
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xds-server-rbac
subjects:
  - kind: ServiceAccount
    name: xds-server-user
    # Reference to upper's `metadata.namespace`
    namespace: default
roleRef:
  kind: ClusterRole
  name: xds-server-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xds-config
data:
  app.yaml: |
    nodeId: '25386353-c3e2-42f5-ad65-2b003c3386f5'
    managementServer:
      port: 18000
      maxConcurrentStreams: 1000
    upstreamServices:
      - 'shipping'
      - 'payment'
